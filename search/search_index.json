{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>This is the documentation for Low-Ops platform. Here you will find information about how to use the platform. It describes the platform's architecture and how to use it as a developer and as an operator.</p>"},{"location":"#internal-developer-platform","title":"Internal Developer Platform","text":"<p>Low-Ops is a platform for running applications in a cloud environment. It is designed to be easy to use and to require minimal maintenance. At its core, it is a Kubernetes cluster with a set of tools to make it easy to deploy and manage applications. It is designed to be used by developers and operators with minimal knowledge of Kubernetes and cloud infrastructure. You will be able to do all your tasks through the Low-Ops Portal supported with best practices of delivering applications to your business and customers.</p>"},{"location":"#focus-on-value-delivery-not-re-inventing-the-wheel","title":"Focus on value delivery. Not re-inventing the wheel.","text":"<p>Without Low-Ops, an organization would need to hire a team of DevOps-, Cloud engineers and Platform engineers to build and maintain a platform for running applications. This is a costly and time-consuming process. Low-Ops solves this problem by providing a platform that is easy to use and requires minimal maintenance. This allows organizations to focus on their core business and deliver value to their customers.</p>"},{"location":"#key-features","title":"Key features","text":"<ul> <li>Easy to use - Low-Ops is designed to be easy to use. It is designed to be used by developers and operators with minimal knowledge of Kubernetes and cloud infrastructure. You will be able to do all your tasks through the Low-Ops Portal.</li> <li>Self-service - Low-Ops is designed to be self-service. This means that developers and operators can do all their tasks without having to contact a platform team.</li> <li>Self-healing - Low-Ops is designed to be self-healing. This means that if something goes wrong, the platform will automatically fix itself.</li> <li>Highly available - Low-Ops is designed to be highly available. This means that if something goes wrong, the platform will automatically recover from the failure.</li> <li>Cost-effective - Low-Ops is designed to be cost-effective. This means that it is designed to be cheap to run and maintain.</li> <li>Secure - Low-Ops is designed to be secure. This means that it is designed to be secure by default. With fine-grained permission access, users can only access what they need to do their job.</li> <li>Scalable - Low-Ops is designed to be scalable. This means that it is designed to be able to scale up and down as needed.</li> <li>Upgradable - Low-Ops is designed to be upgradable. This means that it is designed to be able to upgrade to new versions of Kubernetes and other components without downtime.</li> </ul> <p>Jump to Getting Started to learn how to use Low-Ops. Or checkout out our Architecture to learn how Low-Ops works.</p>"},{"location":"architecture/","title":"Architecture","text":"<p>Low-Ops is made up of a set of components that work together to provide a platform for running applications. </p>"},{"location":"architecture/#overview","title":"Overview","text":"<p>There are 3 main layers in Low-Ops architecture:</p> <ol> <li>Applications - Custom-built applications that run on Low-Ops.</li> <li>Platform - The platform that runs the applications. It also provides a diverse set of services that are used by the applications or enables developers to build, deliver, and own their applications end-to-end.</li> <li>Foundation - The foundation that the platform runs on. This is the cloud provider or on-premise datacenter that provides a cloud-agnostic foundation which must be a Kubernetes cluster.</li> </ol> <pre><code>    C4Context\n      title Low-Ops\n      System_Boundary(Enterprise, \"Enterprise\") {\n        Person(Developer, \"develops and deploys applications\")\n        Person(Operator, \"Manages the platform\")\n        Person(EndUser, \"Uses business or consumer applications\")\n\n        System(EnterpriseIDP, \"Enterprise Identity Provider\")\n\n        System_Boundary(Apps, \"Applications\") {\n            System(AppMendix, \"Mendix App\")\n            System(AppNextJS, \"NextJS App\")\n            System(AppDjango, \"Django App\")\n            System(AppPHP, \"PHP App\")\n        }\n\n        System_Boundary(Platform, \"Platform\") {\n            UpdateLayoutConfig($c4ShapeInRow=\"3\", $c4BoundaryInRow=\"1\")\n            System_Boundary(CoreServices, \"Core Services\") {\n                System(Registry, \"Container Registry\")\n                System(Ingress, \"Ingress\")\n                System(IDP, \"Identity Provider\")\n                System(Database, \"Core Database Service\")\n                System(Observability, \"Observability\")\n            }\n            System_Boundary(DevOpsServices, \"DevOps Services\") {\n                System(Portal, \"Portal\")\n                System(Pipelines, \"Pipelines\")\n                System(SCM, \"Source Code Management\")\n            }\n            System_Boundary(DataServices, \"Data Services\") {\n                System(SharedDatabase, \"Shared Database Service\")\n                System(SharedObjectStorage, \"Shared Object Storage Service\")\n            }\n        }\n\n        System_Boundary(Foundation, \"Foundation\") {\n            System(aws, \"Amazon Web Services\")\n            System(GCP, \"Google Cloud Platform\")\n            System(Azure, \"Azure Cloud Platform\")\n            System(OpenShift, \"OpenShift\")\n            System(K8s, \"Any Kubernetes compatible platform\")\n        }\n      }\n\n      Rel(Developer, Portal, \"uses\")\n      Rel(Operator, Portal, \"uses\")\n      Rel(EndUser, AppMendix, \"uses\")\n      Rel(EndUser, AppPHP, \"uses\")\n      Rel(EndUser, AppDjango, \"uses\")\n      Rel(EndUser, AppNextJS, \"uses\")\n      Rel(IDP, EnterpriseIDP, \"Delegate authentication\")\n      UpdateLayoutConfig($c4ShapeInRow=\"3\", $c4BoundaryInRow=\"1\")</code></pre>"},{"location":"architecture/#philosophy","title":"Philosophy","text":"<p>Deploying components onto Kubernetes is not rocket science. However, having the platform to be reproducible, scalable, and maintainable is a challenge. Low-Ops is designed to be easy to use and requires minimal maintenance. It is designed to be used by developers and operators with minimal knowledge of Kubernetes and cloud infrastructure. You will be able to do all your tasks through the Low-Ops Portal supported with best practices of delivering applications to your business and customers.</p> <p>Because the whole platform is fully automated and runs on your infrastructure, you have 100% control over your data and can be sure that it is secure. You can also easily integrate it with your existing systems and processes.</p> <p>Don't want or need upgradability of Low-Ops? You can modify it to fit your needs. You can also use it as a starting point for your own platform.</p>"},{"location":"how-to/onboard-new-application/","title":"Onboard a new application","text":""},{"location":"references/application-types/","title":"Application Types","text":""}]}